# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python CI

on:
  push:
    branches:
      - main
      - master
      - fix/get_user_by_email
  pull_request:
    branches:
      - main
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install Docker and Docker Compose
      run: |
        sudo apt-get update
        sudo apt-get remove -y containerd docker docker-engine docker.io
        sudo apt-get install -y \
            ca-certificates \
            curl \
            gnupg \
            lsb-release

        sudo mkdir -p /etc/apt/keyrings
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --yes --dearmor -o /etc/apt/keyrings/docker.gpg

        echo \
          "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
          $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

        sudo apt-get update
        sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin

    - name: Start Docker Compose Services
      run: |
        sudo docker-compose up -d
        sleep 20

    - name: Verify MongoDB Connection
      run: |
        sudo docker-compose exec mongodb mongo --eval "db.runCommand({ ping: 1 })"

    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install -r backend/requirements.pip

    - name: Run Unit Tests
      run: |
        sudo docker-compose exec backend pytest -v


